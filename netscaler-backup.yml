---
- name: Netscaler full backup
  hosts: netscalers
  connection: local
  gather_facts: True

  vars:

    ansible_connection: "local"

    backup_location: "/home/user/ansible/CFGS/"

    ns_sys_backup: "/var/ns_sys_backup"

  tasks:
    - name: Get timestamp from the system
      shell: "date +%Y-%m-%d%H-%M-%S"
      register: tstamp
      
    - name: Set time date variables
      set_fact:
       cur_date: "{{ tstamp.stdout[0:10]}}"
       cur_time: "{{ tstamp.stdout[10:]}}"

    - name: Check backup file status
      local_action:
        module: stat
        path: "{{ backup_location }}/{{ cur_date }}/{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}.tgz"
      register: stat_result

    - name: Check backup directory location
      local_action:
        module: file
        path: "{{ backup_location }}/{{ cur_date }}/"
        state: directory
        mode: 0775
        recurse: yes
      run_once: True
      when: stat_result.stat.exists == False

    - name: Full backup of Netscaler configuration.
      block:

      - name: Create Netscaler system backup
        local_action:
          module: uri
          url: "https://{{ inventory_hostname }}/nitro/v1/config/systembackup?action=create"
          method: POST
          validate_certs: no
          return_content: yes
          headers:
            X-NITRO-USER: "{{ nitro_user | default('nsroot') }}"
            X-NITRO-PASS: "{{ nitro_pass | default('nsroot') }}"
          body_format: json
          body: 
            systembackup:
              filename: "{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}"
              level: full
              comment: Ansible Generated Backup

      - name: Fetch Netscaler system backup
        local_action:
          module: uri
          url: "https://{{ inventory_hostname }}/nitro/v1/config/systemfile?args=filename:{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}.tgz,filelocation:{{ ns_sys_backup | replace('/','%2F') }}"
          method: GET
          status_code: 200
          validate_certs: no
          return_content: yes
          headers:
            X-NITRO-USER: "{{ nitro_user | default('nsroot') }}"
            X-NITRO-PASS: "{{ nitro_pass | default('nsroot') }}"
        register: result
      - name: Save result to config directory
        copy:
          content: "{{ result.json.systemfile[0].filecontent }}"
          dest: "{{ backup_location }}/{{ cur_date }}/{{inventory_hostname}}b64encode-file"
      - name: base64 decode
        shell: cat "{{ backup_location }}/{{ cur_date }}/{{inventory_hostname}}b64encode-file" | base64 -d > "{{ backup_location }}/{{ cur_date }}/{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}.tgz"

      - name: cleanup base64encode file
        shell: rm "{{ backup_location }}/{{ cur_date }}/{{inventory_hostname}}b64encode-file"

     
      - name: Chmod saved backup file permissions
        local_action:
          module: file
          path: "{{ backup_location }}/{{ cur_date }}/{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}.tgz"
          mode: 0644
       
      - name: Delete system backup from Netscaler
        local_action:
          module: uri
          url: "https://{{ inventory_hostname }}/nitro/v1/config/systembackup/{{ inventory_hostname}}-{{ cur_date }}-{{ cur_time }}.tgz"
          method: DELETE
          validate_certs: no
          return_content: yes
          headers:
            X-NITRO-USER: "{{ nitro_user | default('nsroot') }}"
            X-NITRO-PASS: "{{ nitro_pass | default('nsroot') }}"

      when: stat_result.stat.exists == False

- name: Archive files, send by mail, remove old files
  hosts: localhost
  gather_facts: False
  
  tasks:
    - name: Get timestamp from the system
      shell: "date +%Y-%m-%d%H-%M-%S"
      register: tstamp
      
    - name: Set variables
      set_fact:
       cur_date: "{{ tstamp.stdout[0:10]}}"
       cur_time: "{{ tstamp.stdout[10:]}}"
    
    - name: Archive Netscaler folder
      archive:
        path: "/home/user/ansible/CFGS/{{cur_date}}"
        dest: "/home/user/ansible/CFGS/netscalerBackup-{{cur_date}}.zip"
        format: "zip"
  
    - name: Send email
      mail:
        host: smtp.gmail.com
        port: 465
        secure: always
        username: "{{ email_username }}"
        password: "{{ email_password }}"
        from: mymail user <mymail@gmail.com>
        
        to: 
          - Cihan Akgun <cihan.akgun@gmail.com>
          
        subject: "Citrix Netscaler Configuration Backups "
        body: "Hi,\n \n
           {{cur_date}} dated Citrix Netscaler configuration backups are attached.\n\n"
        attach:
          - "/home/user/ansible/CFGS/netscalerBackup-{{cur_date}}.zip"
       
       
    - name: Delete Temporary Netscaler directory
      file:
        path: "/home/user/ansible/CFGS/{{cur_date}}"
        state: absent

   

    - name: Files older than 180 days
      find:
        paths: /home/user/ansible/CFGS/
        age: 180d
        recurse: yes
        file_type: any
      register: files_to_delete


    - name: Remove files older files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items:
      - "{{ files_to_delete.files }}"
         
